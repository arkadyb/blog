// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reminder.proto

package reminder

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScheduleReminderRequest struct {
	When                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=when,proto3" json:"when,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ScheduleReminderRequest) Reset()         { *m = ScheduleReminderRequest{} }
func (m *ScheduleReminderRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleReminderRequest) ProtoMessage()    {}
func (*ScheduleReminderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_165470c8955d7e69, []int{0}
}

func (m *ScheduleReminderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleReminderRequest.Unmarshal(m, b)
}
func (m *ScheduleReminderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleReminderRequest.Marshal(b, m, deterministic)
}
func (m *ScheduleReminderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleReminderRequest.Merge(m, src)
}
func (m *ScheduleReminderRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleReminderRequest.Size(m)
}
func (m *ScheduleReminderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleReminderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleReminderRequest proto.InternalMessageInfo

func (m *ScheduleReminderRequest) GetWhen() *timestamp.Timestamp {
	if m != nil {
		return m.When
	}
	return nil
}

type ScheduleReminderResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleReminderResponse) Reset()         { *m = ScheduleReminderResponse{} }
func (m *ScheduleReminderResponse) String() string { return proto.CompactTextString(m) }
func (*ScheduleReminderResponse) ProtoMessage()    {}
func (*ScheduleReminderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_165470c8955d7e69, []int{1}
}

func (m *ScheduleReminderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleReminderResponse.Unmarshal(m, b)
}
func (m *ScheduleReminderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleReminderResponse.Marshal(b, m, deterministic)
}
func (m *ScheduleReminderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleReminderResponse.Merge(m, src)
}
func (m *ScheduleReminderResponse) XXX_Size() int {
	return xxx_messageInfo_ScheduleReminderResponse.Size(m)
}
func (m *ScheduleReminderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleReminderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleReminderResponse proto.InternalMessageInfo

func (m *ScheduleReminderResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*ScheduleReminderRequest)(nil), "demo.reminder.v1.ScheduleReminderRequest")
	proto.RegisterType((*ScheduleReminderResponse)(nil), "demo.reminder.v1.ScheduleReminderResponse")
}

func init() { proto.RegisterFile("reminder.proto", fileDescriptor_165470c8955d7e69) }

var fileDescriptor_165470c8955d7e69 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0xcd, 0xcd,
	0xcc, 0x4b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x48, 0x49, 0xcd, 0xcd,
	0xd7, 0x83, 0x0b, 0x96, 0x19, 0x4a, 0xc9, 0xa7, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0xe5,
	0x93, 0x4a, 0xd3, 0xf4, 0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x20, 0x5a, 0x94,
	0x3c, 0xb9, 0xc4, 0x83, 0x93, 0x33, 0x52, 0x53, 0x4a, 0x73, 0x52, 0x83, 0xa0, 0xfa, 0x82, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xf4, 0xb8, 0x58, 0xca, 0x33, 0x52, 0xf3, 0x24, 0x18, 0x15,
	0x18, 0x35, 0xb8, 0x8d, 0xa4, 0xf4, 0x20, 0x46, 0xe9, 0xc1, 0x8c, 0xd2, 0x0b, 0x81, 0x19, 0x15,
	0x04, 0x56, 0xa7, 0xa4, 0xc5, 0x25, 0x81, 0x69, 0x54, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x10,
	0x1f, 0x17, 0x53, 0x66, 0x0a, 0xd8, 0x24, 0xce, 0x20, 0xa6, 0xcc, 0x14, 0xa3, 0x3a, 0x2e, 0x7e,
	0x98, 0x9a, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x6c, 0x2e, 0x01, 0x74, 0xed, 0x42,
	0x9a, 0x7a, 0xe8, 0x3e, 0xd2, 0xc3, 0xe1, 0x5a, 0x29, 0x2d, 0x62, 0x94, 0x42, 0x5c, 0xa3, 0xc4,
	0xe0, 0xc4, 0x15, 0xc5, 0x01, 0x53, 0x99, 0xc4, 0x06, 0xf6, 0x91, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0xeb, 0xdb, 0x38, 0xe3, 0x4e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReminderServiceClient is the client API for ReminderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReminderServiceClient interface {
	ScheduleReminder(ctx context.Context, in *ScheduleReminderRequest, opts ...grpc.CallOption) (*ScheduleReminderResponse, error)
}

type reminderServiceClient struct {
	cc *grpc.ClientConn
}

func NewReminderServiceClient(cc *grpc.ClientConn) ReminderServiceClient {
	return &reminderServiceClient{cc}
}

func (c *reminderServiceClient) ScheduleReminder(ctx context.Context, in *ScheduleReminderRequest, opts ...grpc.CallOption) (*ScheduleReminderResponse, error) {
	out := new(ScheduleReminderResponse)
	err := c.cc.Invoke(ctx, "/demo.reminder.v1.ReminderService/ScheduleReminder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReminderServiceServer is the server API for ReminderService service.
type ReminderServiceServer interface {
	ScheduleReminder(context.Context, *ScheduleReminderRequest) (*ScheduleReminderResponse, error)
}

// UnimplementedReminderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReminderServiceServer struct {
}

func (*UnimplementedReminderServiceServer) ScheduleReminder(ctx context.Context, req *ScheduleReminderRequest) (*ScheduleReminderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScheduleReminder not implemented")
}

func RegisterReminderServiceServer(s *grpc.Server, srv ReminderServiceServer) {
	s.RegisterService(&_ReminderService_serviceDesc, srv)
}

func _ReminderService_ScheduleReminder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleReminderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).ScheduleReminder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.reminder.v1.ReminderService/ScheduleReminder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).ScheduleReminder(ctx, req.(*ScheduleReminderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReminderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.reminder.v1.ReminderService",
	HandlerType: (*ReminderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScheduleReminder",
			Handler:    _ReminderService_ScheduleReminder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reminder.proto",
}
